//
// Created by velkejondra on 12/28/20.
//

#ifndef CHESS_ENGINE_CPP_EVAL_H
#define CHESS_ENGINE_CPP_EVAL_H

const int opening_piece_values[] = {
        [PAWN] = 100,
        [KNIGHT] = 325,
        [BISHOP] = 350,
        [ROOK] = 500,
        [QUEEN] = 900,
        [KING] = 0,
};

const int white_piece_place_table[6][64] = {
        // pawns
        {
                0,   0,   0,   0,   0,   0,   0,   0,
                50,  50,  50,  50,  50,  50,  50,  50,
                10,  10,  20,  30,  30,  20,  10,  10,
                5,   5,   10,  25,  25,  10,  5,   5,
                0,   0,   0,   20,  20,  0,   0,   0,
                5,   -5,  -10, 0,   0,   -10, -5,  5,
                5,   10,  10, -20, -20, 10, 10,  5,
                0,   0,   0,   0,   0,   0,   0,   0
        },
        // knights
        {
                -50, -40, -30, -30, -30, -30, -40, -50,
                -40, -20, 0,   0,   0,   0,   -20, -40,
                -30, 0,   10,  15,  15,  10,  0,   -30,
                -30, 5,   15,  20,  20,  15,  5,   -30,
                -30, 0,   15,  20,  20,  15,  0,   -30,
                -30, 5,   10,  15,  15,  10,  5,   -30,
                -40, -20, 0,  5,   5,   0,  -20, -40,
                -50, -40, -30, -30, -30, -30, -40, -50,
        },
        //bishopts
        {       -20, -10, -10, -10, -10, -10, -10, -20,
                -10, 0,   0,   0,   0,   0,   0,   -10,
                -10, 0,   5,   10,  10,  5,   0,   -10,
                -10, 5,   5,   10,  10,  5,   5,   -10,
                -10, 0,   10,  10,  10,  10,  0,   -10,
                -10, 10,  10,  10,  10,  10,  10,  -10,
                -10, 5,   0,  0,   0,   0,  5,   -10,
                -20, -10, -10, -10, -10, -10, -10, -20,
        },
        //rooks
        {       0,   0,   0,   0,   0,   0,   0,   0,
                5,   10,  10,  10,  10,  10,  10,  5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,  0,   0,   0,  0,   -5,
                0,   0,   0,   5,   5,   0,   0,   0
        },
        //queens
        {       -20, -10, -10, -5,  -5,  -10, -10, -20,
                -10, 0,   0,   0,   0,   0,   0,   -10,
                -10, 0,   5,   5,   5,   5,   0,   -10,
                -5,  0,   5,   5,   5,   5,   0,   -5,
                0,   0,   5,   5,   5,   5,   0,   -5,
                -10, 5,   5,   5,   5,   5,   0,   -10,
                -10, 0,   5,  0,   0,   0,  0,   -10,
                -20, -10, -10, -5,  -5,  -10, -10, -20
        },
        //king
        {
                -30, -40, -40, -50, -50, -40, -40, -30,
                -30, -40, -40, -50, -50, -40, -40, -30,
                -30, -40, -40, -50, -50, -40, -40, -30,
                -30, -40, -40, -50, -50, -40, -40, -30,
                -20, -30, -30, -40, -40, -30, -30, -20,
                -10, -20, -20, -20, -20, -20, -20, -10,
                20,  20,  0,  0,   0,   0,  20,  20,
                20,  30,  10,  0,   0,   10,  30,  20
        }


};
const int black_piece_place_table[6][64] = {
        // pawns
        {
                0,   0,   0,   0,   0,   0,   0,   0,
                5,   10,  10, -20, -20, 10, 10,  5,
                5,   -5,  -10, 0,   0,   -10, -5,  5,
                0,   0,   0,   20,  20,  0,   0,   0,
                5,   5,   10,  25,  25,  10,  5,   5,
                10,  10,  20,  30,  30,  20,  10,  10,
                50,  50,  50,  50,  50,  50,  50,  50,
                0,   0,   0,   0,   0,   0,   0,   0,
        },
        // knights
        {
                -50, -40, -30, -30, -30, -30, -40, -50,
                -40, -20, 0,  5,   5,   0,  -20, -40,
                -30, 5,   10,  15,  15,  10,  5,   -30,
                -30, 0,   15,  20,  20,  15,  0,   -30,
                -30, 5,   15,  20,  20,  15,  5,   -30,
                -30, 0,   10,  15,  15,  10,  0,   -30,
                -40, -20, 0,   0,   0,   0,   -20, -40,
                -50, -40, -30, -30, -30, -30, -40, -50,
        },
        //bishopts
        {
                -20, -10, -10, -10, -10, -10, -10, -20,
                -10, 5,   0,  0,   0,   0,  5,   -10,
                -10, 10,  10,  10,  10,  10,  10,  -10,
                -10, 0,   10,  10,  10,  10,  0,   -10,
                -10, 5,   5,   10,  10,  5,   5,   -10,
                -10, 0,   5,   10,  10,  5,   0,   -10,
                -10, 0,   0,   0,   0,   0,   0,   -10,
                -20, -10, -10, -10, -10, -10, -10, -20,
        },
        //rooks
        {
                0,   0,   0,   5,   5,   0,   0,   0,
                -5,  0,   0,  0,   0,   0,  0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                -5,  0,   0,   0,   0,   0,   0,   -5,
                5,   10,  10,  10,  10,  10,  10,  5,
                0,   0,   0,   0,   0,   0,   0,   0,
        },
        //queens
        {
                -20, -10, -10, -5,  -5,  -10, -10, -20,
                -10, 0,   5,  0,   0,   0,  0,   -10,
                -10, 5,   5,   5,   5,   5,   0,   -10,
                0,   0,   5,   5,   5,   5,   0,   -5,
                -5,  0,   5,   5,   5,   5,   0,   -5,
                -10, 0,   5,   5,   5,   5,   0,   -10,
                -10, 0,   0,   0,   0,   0,   0,   -10,
                -20, -10, -10, -5,  -5,  -10, -10, -20,
        },
        //king
        {
                20,  30,  10,  0,   0,   10,  30,  20,
                20,  20,  0,  0,   0,   0,  20,  20,
                -10, -20, -20, -20, -20, -20, -20, -10,
                -20, -30, -30, -40, -40, -30, -30, -20,
                -30, -40, -40, -50, -50, -40, -40, -30,
                -30, -40, -40, -50, -50, -40, -40, -30,
                -30, -40, -40, -50, -50, -40, -40, -30,
                -30, -40, -40, -50, -50, -40, -40, -30,
        }
};

class Eval {
public:
    static int evaluate(Board &board);
};


#endif //CHESS_ENGINE_CPP_EVAL_H
